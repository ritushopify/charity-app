"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var manager_1 = require("./manager");
exports.NetworkManager = manager_1.NetworkManager;
exports.EFFECT_ID = manager_1.EFFECT_ID;
var context_1 = require("./context");
exports.NetworkContext = context_1.NetworkContext;
function applyToContext(ctx, manager) {
    var e_1, _a;
    var _b = manager.extract(), status = _b.status, redirectUrl = _b.redirectUrl, headers = _b.headers, cookies = _b.cookies;
    if (redirectUrl) {
        ctx.redirect(redirectUrl);
    }
    if (status) {
        ctx.status = status;
    }
    try {
        for (var headers_1 = tslib_1.__values(headers), headers_1_1 = headers_1.next(); !headers_1_1.done; headers_1_1 = headers_1.next()) {
            var _c = tslib_1.__read(headers_1_1.value, 2), header = _c[0], value = _c[1];
            ctx.set(header, value);
        }
    }
    catch (e_1_1) { e_1 = { error: e_1_1 }; }
    finally {
        try {
            if (headers_1_1 && !headers_1_1.done && (_a = headers_1.return)) _a.call(headers_1);
        }
        finally { if (e_1) throw e_1.error; }
    }
    Object.entries(cookies).forEach(function (_a) {
        var _b = tslib_1.__read(_a, 2), cookie = _b[0], options = _b[1];
        var value = options.value, cookieOptions = tslib_1.__rest(options, ["value"]);
        // missing 'none` in `sameSite`
        // https://github.com/DefinitelyTyped/DefinitelyTyped/blob/master/types/cookies/index.d.ts#L91
        ctx.cookies.set(cookie, value, cookieOptions);
    });
    return ctx;
}
exports.applyToContext = applyToContext;
