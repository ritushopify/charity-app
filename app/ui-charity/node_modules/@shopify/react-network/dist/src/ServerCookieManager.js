"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var cookie_1 = tslib_1.__importDefault(require("cookie"));
var ServerCookieManager = /** @class */ (function () {
    function ServerCookieManager(cookies) {
        var _this = this;
        if (cookies === void 0) { cookies = {}; }
        this.cookies = new Map();
        var parsedCookies = typeof cookies === 'string' ? cookie_1.default.parse(cookies) : cookies;
        Object.entries(parsedCookies).forEach(function (_a) {
            var _b = tslib_1.__read(_a, 2), key = _b[0], value = _b[1];
            _this.setCookie(key, value);
        });
    }
    ServerCookieManager.prototype.getCookie = function (name) {
        var cookie = this.cookies.get(name);
        return cookie && cookie.value;
    };
    ServerCookieManager.prototype.getCookies = function () {
        var e_1, _a;
        var cookies = {};
        try {
            for (var _b = tslib_1.__values(this.cookies), _c = _b.next(); !_c.done; _c = _b.next()) {
                var _d = tslib_1.__read(_c.value, 2), key = _d[0], value = _d[1];
                cookies[key] = value;
            }
        }
        catch (e_1_1) { e_1 = { error: e_1_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
            }
            finally { if (e_1) throw e_1.error; }
        }
        return tslib_1.__assign({}, cookies);
    };
    ServerCookieManager.prototype.setCookie = function (name, value) {
        var fullCookie = typeof value === 'string' ? { value: value } : value;
        this.cookies.set(name, fullCookie);
    };
    ServerCookieManager.prototype.removeCookie = function (name) {
        this.cookies.set(name, {
            value: '',
            expires: new Date('Thu, 01 Jan 1970 00:00:01 GMT'),
        });
    };
    ServerCookieManager.prototype.clear = function () {
        this.cookies.clear();
    };
    return ServerCookieManager;
}());
exports.ServerCookieManager = ServerCookieManager;
