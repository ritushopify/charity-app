{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar helper_1 = require(\"../helper\");\n\nvar types_1 = require(\"../types\");\n\nvar types_2 = require(\"./types\");\n\nfunction show(toastMessage) {\n  return helper_1.actionWrapper({\n    group: types_1.Group.Toast,\n    payload: toastMessage,\n    type: types_2.ActionType.SHOW\n  });\n}\n\nexports.show = show;\n\nfunction clear(payload) {\n  return helper_1.actionWrapper({\n    payload: payload,\n    group: types_1.Group.Toast,\n    type: types_2.ActionType.CLEAR\n  });\n}\n\nexports.clear = clear;\n\nvar Toast =\n/** @class */\nfunction (_super) {\n  __extends(Toast, _super);\n\n  function Toast(app, options) {\n    var _this = _super.call(this, app, types_1.Group.Toast, types_1.Group.Toast) || this;\n\n    _this.message = '';\n    _this.duration = 5000;\n\n    _this.set(options);\n\n    return _this;\n  }\n\n  Object.defineProperty(Toast.prototype, \"options\", {\n    get: function () {\n      return {\n        duration: this.duration,\n        isError: this.isError,\n        message: this.message\n      };\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Toast.prototype, \"payload\", {\n    get: function () {\n      return __assign({\n        id: this.id\n      }, this.options);\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  Toast.prototype.set = function (options) {\n    var mergedOptions = helper_1.getMergedProps(this.options, options);\n    var message = mergedOptions.message,\n        duration = mergedOptions.duration,\n        isError = mergedOptions.isError;\n    this.message = message;\n    this.duration = duration;\n    this.isError = isError;\n    return this;\n  };\n\n  Toast.prototype.dispatch = function (action) {\n    switch (action) {\n      case types_2.Action.SHOW:\n        var openAction = show(this.payload);\n        this.app.dispatch(openAction);\n        break;\n\n      case types_2.Action.CLEAR:\n        this.app.dispatch(clear({\n          id: this.id\n        }));\n        break;\n    }\n\n    return this;\n  };\n\n  return Toast;\n}(helper_1.ActionSet);\n\nexports.Toast = Toast;\n\nfunction create(app, options) {\n  return new Toast(app, options);\n}\n\nexports.create = create;","map":null,"metadata":{},"sourceType":"script"}