{"ast":null,"code":"\"use strict\";\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar type_validate_1 = require(\"../type-validate\");\n\nvar utils_1 = require(\"../utils\");\n\nvar button_1 = require(\"./button\");\n\nvar Modal_1 = require(\"../../actions/Modal\");\n\nexports.ActionType = Modal_1.ActionType;\n\nvar Button_1 = require(\"../../actions/Button\");\n\nvar safe_redirect_1 = require(\"../safe-redirect\");\n\nfunction matchesSafeOrigin(value, localOrigin) {\n  var hostName;\n\n  try {\n    hostName = new URL(localOrigin).hostname;\n  } catch (error) {\n    return [{\n      error: 'invalid_app_origin',\n      value: localOrigin,\n      message: \"Provided value for app origin: `\" + localOrigin + \"` is invalid\"\n    }];\n  }\n\n  var isSafeSrc = safe_redirect_1.isSafe(value, {\n    requireAbsolute: true,\n    requireSSL: true,\n    whitelist: [hostName]\n  });\n\n  if (!isSafeSrc) {\n    return [{\n      error: 'unsafe_origin',\n      value: value,\n      message: \"Provided value is not whitelisted\"\n    }];\n  }\n}\n\nfunction getModalSchema(props, localOrigin) {\n  if (props === void 0) {\n    props = {};\n  }\n\n  var baseModalSchema = type_validate_1.matchesObject({\n    title: type_validate_1.makeOptional(type_validate_1.matchesString()),\n    footer: type_validate_1.makeOptional(type_validate_1.matchesObject({\n      buttons: type_validate_1.matchesObject({\n        primary: type_validate_1.makeOptional(button_1.buttonSchemaWithId),\n        secondary: type_validate_1.makeOptional(type_validate_1.matchesArray(button_1.buttonSchemaWithId))\n      })\n    })),\n    size: type_validate_1.makeOptional(type_validate_1.matchesEnum(Modal_1.Size))\n  });\n\n  if (Modal_1.isIframeModal(props)) {\n    if (props.url) {\n      var urlSchema = type_validate_1.matchesObject({\n        url: type_validate_1.composeSchemas(type_validate_1.matchesString(), function (value) {\n          return value.startsWith('https://') ? undefined : [{\n            error: 'invalid_secure_url',\n            value: value,\n            message: 'expected string to start with `https://`'\n          }];\n        }, function (value) {\n          return localOrigin ? matchesSafeOrigin(value, localOrigin) : undefined;\n        })\n      });\n      return type_validate_1.composeSchemas(baseModalSchema, urlSchema);\n    }\n\n    return type_validate_1.composeSchemas(baseModalSchema, utils_1.relativePathSchema);\n  }\n\n  return type_validate_1.composeSchemas(baseModalSchema, type_validate_1.matchesObject({\n    message: type_validate_1.matchesString()\n  }));\n}\n\nfunction validateProps(props, localOrigin) {\n  return type_validate_1.validate(props, getModalSchema(props, localOrigin));\n}\n\nexports.validateProps = validateProps;\n\nfunction validateAction(action, localOrigin) {\n  var schema = getModalSchema(action.payload, localOrigin);\n\n  switch (action.type) {\n    case Modal_1.ActionType.OPEN:\n    case Modal_1.ActionType.UPDATE:\n      return type_validate_1.validate(action, utils_1.createActionValidator(Modal_1.ActionType, schema, true, action.type === Modal_1.ActionType.UPDATE));\n\n    case Modal_1.ActionType.FOOTER_BUTTON_CLICK:\n      return button_1.validateAction(__assign({}, action, {\n        type: Button_1.ActionType.CLICK\n      }));\n\n    case Modal_1.ActionType.FOOTER_BUTTON_UPDATE:\n      return button_1.validateAction(__assign({}, action, {\n        type: Button_1.ActionType.UPDATE\n      }));\n\n    case Modal_1.ActionType.CLOSE:\n    default:\n      return type_validate_1.validate(action, utils_1.createActionValidator(Modal_1.ActionType));\n  }\n}\n\nexports.validateAction = validateAction;","map":null,"metadata":{},"sourceType":"script"}