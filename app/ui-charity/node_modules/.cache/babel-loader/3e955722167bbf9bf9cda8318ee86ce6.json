{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar Redirect_1 = require(\"../Navigation/Redirect\");\n\nexports.RedirectType = Redirect_1.Action;\nexports.ResourceType = Redirect_1.ResourceType;\n\nvar helper_1 = require(\"../helper\");\n\nvar types_1 = require(\"../types\");\n\nvar Action;\n\n(function (Action) {\n  Action[\"UPDATE\"] = \"UPDATE\";\n})(Action = exports.Action || (exports.Action = {}));\n\nvar ActionType;\n\n(function (ActionType) {\n  ActionType[\"UPDATE\"] = \"APP::LINK::UPDATE\";\n})(ActionType = exports.ActionType || (exports.ActionType = {}));\n\nfunction update(group, component, props) {\n  var id = component.id;\n  var label = props.label;\n  var action = helper_1.getEventNameSpace(group, Action.UPDATE, component);\n\n  var payload = __assign({\n    id: id,\n    label: label\n  }, props);\n\n  return helper_1.actionWrapper({\n    type: action,\n    group: group,\n    payload: payload\n  });\n}\n\nexports.update = update;\n\nvar Link =\n/** @class */\nfunction (_super) {\n  __extends(Link, _super);\n\n  function Link(app, options) {\n    var _this = _super.call(this, app, types_1.Group.Link, types_1.Group.Link) || this;\n\n    _this.options = options;\n\n    _this.set(options, false);\n\n    return _this;\n  }\n\n  Object.defineProperty(Link.prototype, \"payload\", {\n    get: function () {\n      return __assign({\n        id: this.id\n      }, this.options);\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  Link.prototype.set = function (options, shouldUpdate) {\n    if (shouldUpdate === void 0) {\n      shouldUpdate = true;\n    }\n\n    this.options = helper_1.getMergedProps(this.options, options);\n\n    if (shouldUpdate) {\n      this.dispatch(Action.UPDATE);\n    }\n\n    return this;\n  };\n\n  Link.prototype.dispatch = function (action) {\n    switch (action) {\n      case Action.UPDATE:\n        this.app.dispatch(update(this.group, this.component, this.payload));\n        break;\n    }\n\n    return this;\n  };\n\n  return Link;\n}(helper_1.ActionSet);\n\nexports.Link = Link;\n\nfunction create(app, options) {\n  return new Link(app, options);\n}\n\nexports.create = create;","map":null,"metadata":{},"sourceType":"script"}