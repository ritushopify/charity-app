{"ast":null,"code":"\"use strict\";\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar actions_1 = require(\"../../actions\");\n\nvar type_validate_1 = require(\"../type-validate\");\n\nvar utils_1 = require(\"../utils\");\n\nfunction matchesAbsolutePath(value) {\n  return value.match('^https?://') ? undefined : [{\n    value: value,\n    error: 'invalid_absolute_url',\n    message: 'expected string to start with `https://` or `http://`'\n  }];\n}\n\nfunction getSectionSchema(payload) {\n  var isProductVariant = payload && payload.section && payload.section.resource && payload.section.name === actions_1.Redirect.ResourceType.Product;\n  var resourceSchema = {\n    create: type_validate_1.makeOptional(type_validate_1.matchesBoolean()),\n    id: type_validate_1.makeOptional(type_validate_1.matchesString())\n  };\n\n  var productVariantSchema = __assign({}, resourceSchema, {\n    variant: type_validate_1.makeOptional(type_validate_1.matchesObject(resourceSchema))\n  });\n\n  return type_validate_1.matchesObject({\n    section: type_validate_1.matchesObject({\n      name: type_validate_1.matchesEnum(actions_1.Redirect.ResourceType),\n      resource: type_validate_1.makeOptional(type_validate_1.matchesObject(isProductVariant ? productVariantSchema : resourceSchema))\n    })\n  });\n}\n\nfunction validateAction(action) {\n  var newContextSchema = type_validate_1.matchesObject({\n    newContext: type_validate_1.makeOptional(type_validate_1.matchesBoolean())\n  });\n  var actionType = actions_1.Redirect.ActionType;\n  var schema;\n\n  switch (action.type) {\n    case actions_1.History.ActionType.PUSH:\n    case actions_1.History.ActionType.REPLACE:\n      actionType = actions_1.History.ActionType;\n      schema = utils_1.relativePathSchema;\n      break;\n\n    case actions_1.Redirect.ActionType.APP:\n      schema = utils_1.relativePathSchema;\n      break;\n\n    case actions_1.Redirect.ActionType.REMOTE:\n      schema = type_validate_1.composeSchemas(type_validate_1.matchesObject({\n        url: type_validate_1.composeSchemas(type_validate_1.matchesString(), function (value) {\n          return matchesAbsolutePath(value);\n        })\n      }), newContextSchema);\n      break;\n\n    case actions_1.Redirect.ActionType.ADMIN_PATH:\n      schema = type_validate_1.composeSchemas(utils_1.relativePathSchema, newContextSchema);\n      break;\n\n    case actions_1.Redirect.ActionType.ADMIN_SECTION:\n      schema = type_validate_1.composeSchemas(getSectionSchema(action.payload), newContextSchema);\n      break;\n  }\n\n  return type_validate_1.validate(action, utils_1.createActionValidator(actionType, schema));\n}\n\nexports.validateAction = validateAction;","map":null,"metadata":{},"sourceType":"script"}