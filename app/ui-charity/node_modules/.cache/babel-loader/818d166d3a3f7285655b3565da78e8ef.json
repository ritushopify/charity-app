{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar helper_1 = require(\"../helper\");\n\nvar types_1 = require(\"../types\");\n/**\n * Fullscreen action enum\n * @beta\n */\n\n\nvar Action;\n\n(function (Action) {\n  Action[\"ENTER\"] = \"ENTER\";\n  Action[\"EXIT\"] = \"EXIT\";\n})(Action = exports.Action || (exports.Action = {}));\n/**\n * Fullscreen action type enum\n * @remarks includes the action prefix and group\n *\n * @beta\n */\n\n\nvar ActionType;\n\n(function (ActionType) {\n  ActionType[\"ENTER\"] = \"APP::FULLSCREEN::ENTER\";\n  ActionType[\"EXIT\"] = \"APP::FULLSCREEN::EXIT\";\n})(ActionType = exports.ActionType || (exports.ActionType = {}));\n/**\n * Fullscreen action set\n * @beta\n */\n\n\nvar Fullscreen =\n/** @class */\nfunction (_super) {\n  __extends(Fullscreen, _super);\n  /**\n   * Returns a new instance of a Fullscreen action set\n   * @param app the client application\n   */\n\n\n  function Fullscreen(app) {\n    return _super.call(this, app, types_1.Group.Fullscreen, types_1.Group.Fullscreen) || this;\n  }\n\n  Object.defineProperty(Fullscreen.prototype, \"payload\", {\n    /**\n     * Returns the action set payload\n     */\n    get: function () {\n      return {\n        id: this.id\n      };\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\n   * Dispatches a given action with the action set payload\n   * @param action the action enum\n   * @returns the action set instance\n   */\n\n  Fullscreen.prototype.dispatch = function (action) {\n    this.app.dispatch(helper_1.actionWrapper({\n      group: this.group,\n      type: ActionType[action],\n      payload: this.payload\n    }));\n    return this;\n  };\n\n  return Fullscreen;\n}(helper_1.ActionSet);\n\nexports.Fullscreen = Fullscreen;\n/**\n * Returns a new instance of a Fullscreen action set\n * @param app the client application\n *\n * @beta\n */\n\nfunction create(app) {\n  return new Fullscreen(app);\n}\n\nexports.create = create;","map":null,"metadata":{},"sourceType":"script"}