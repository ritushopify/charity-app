{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar helper_1 = require(\"../helper\");\n\nvar types_1 = require(\"../types\");\n\nvar types_2 = require(\"./types\");\n\nfunction select(payload) {\n  return helper_1.actionWrapper({\n    payload: payload,\n    group: types_1.Group.ResourcePicker,\n    type: types_2.ActionType.SELECT\n  });\n}\n\nexports.select = select;\n\nfunction open(payload) {\n  return helper_1.actionWrapper({\n    payload: payload,\n    group: types_1.Group.ResourcePicker,\n    type: types_2.ActionType.OPEN\n  });\n}\n\nexports.open = open;\n\nfunction cancel(payload) {\n  return helper_1.actionWrapper({\n    payload: payload,\n    group: types_1.Group.ResourcePicker,\n    type: types_2.ActionType.CANCEL\n  });\n}\n\nexports.cancel = cancel;\n\nfunction close(payload) {\n  return helper_1.actionWrapper({\n    payload: payload,\n    group: types_1.Group.ResourcePicker,\n    type: types_2.ActionType.CANCEL\n  });\n}\n\nexports.close = close;\n\nfunction update(payload) {\n  return helper_1.actionWrapper({\n    payload: payload,\n    group: types_1.Group.ResourcePicker,\n    type: types_2.ActionType.UPDATE\n  });\n}\n\nexports.update = update;\n\nvar ResourcePicker =\n/** @class */\nfunction (_super) {\n  __extends(ResourcePicker, _super);\n\n  function ResourcePicker(app, options, resourceType) {\n    var _this = _super.call(this, app, types_1.Group.ResourcePicker, types_1.Group.ResourcePicker) || this;\n\n    _this.selection = [];\n    _this.resourceType = resourceType;\n\n    _this.set(options, false);\n\n    return _this;\n  }\n\n  Object.defineProperty(ResourcePicker.prototype, \"payload\", {\n    get: function () {\n      return __assign({}, this.options, {\n        id: this.id,\n        resourceType: this.resourceType\n      });\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(ResourcePicker.prototype, \"options\", {\n    get: function () {\n      var options = {\n        initialQuery: this.initialQuery,\n        selectMultiple: this.selectMultiple,\n        showHidden: this.showHidden,\n        actionVerb: this.actionVerb\n      };\n\n      if (this.resourceType === types_2.ResourceType.Product) {\n        var productOptions = __assign({}, options, {\n          showVariants: this.showVariants\n        });\n\n        return productOptions;\n      }\n\n      return options;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  ResourcePicker.prototype.set = function (options, shouldUpdate) {\n    if (shouldUpdate === void 0) {\n      shouldUpdate = true;\n    }\n\n    var mergedOptions = helper_1.getMergedProps(this.options, options);\n    var initialQuery = mergedOptions.initialQuery,\n        _a = mergedOptions.showHidden,\n        showHidden = _a === void 0 ? true : _a,\n        _b = mergedOptions.showVariants,\n        showVariants = _b === void 0 ? true : _b,\n        _c = mergedOptions.selectMultiple,\n        selectMultiple = _c === void 0 ? true : _c,\n        _d = mergedOptions.actionVerb,\n        actionVerb = _d === void 0 ? types_2.ActionVerb.Add : _d;\n    this.initialQuery = initialQuery;\n    this.showHidden = Boolean(showHidden);\n    this.showVariants = Boolean(showVariants);\n    this.selectMultiple = Boolean(selectMultiple);\n    this.actionVerb = actionVerb;\n\n    if (shouldUpdate) {\n      this.update();\n    }\n\n    return this;\n  };\n\n  ResourcePicker.prototype.dispatch = function (action, selection) {\n    if (action === types_2.Action.OPEN) {\n      this.open();\n    } else if (action === types_2.Action.UPDATE) {\n      this.update();\n    } else if (action === types_2.Action.CLOSE || action === types_2.Action.CANCEL) {\n      this.cancel();\n    } else if (action === types_2.Action.SELECT) {\n      this.selection = selection;\n      this.app.dispatch(select({\n        id: this.id,\n        selection: this.selection\n      }));\n    }\n\n    return this;\n  };\n\n  ResourcePicker.prototype.update = function () {\n    this.app.dispatch(update(this.payload));\n  };\n\n  ResourcePicker.prototype.open = function () {\n    this.app.dispatch(open(this.payload));\n  };\n\n  ResourcePicker.prototype.cancel = function () {\n    this.app.dispatch(cancel({\n      id: this.id\n    }));\n  };\n\n  ResourcePicker.prototype.close = function () {\n    this.cancel();\n  };\n\n  return ResourcePicker;\n}(helper_1.ActionSet);\n\nexports.ResourcePicker = ResourcePicker;\n\nexports.create = function (app, baseOptions) {\n  var resourceType = baseOptions.resourceType,\n      _a = baseOptions.options,\n      options = _a === void 0 ? {} : _a;\n  return new ResourcePicker(app, options, resourceType);\n};","map":null,"metadata":{},"sourceType":"script"}