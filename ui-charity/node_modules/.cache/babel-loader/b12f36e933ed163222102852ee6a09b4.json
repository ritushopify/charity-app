{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar types_1 = require(\"../types\");\n\nvar helper_1 = require(\"../helper\");\n/**\n * Types\n */\n\n/**\n * @public\n */\n\n\nvar ActionType;\n\n(function (ActionType) {\n  ActionType[\"SHOW\"] = \"APP::SHARE::SHOW\";\n  ActionType[\"CLOSE\"] = \"APP::SHARE::CLOSE\";\n})(ActionType = exports.ActionType || (exports.ActionType = {}));\n/**\n * @public\n */\n\n\nvar Action;\n\n(function (Action) {\n  Action[\"SHOW\"] = \"SHOW\";\n  Action[\"CLOSE\"] = \"CLOSE\";\n})(Action = exports.Action || (exports.Action = {}));\n/**\n * Action\n */\n\n/**\n * A set of actions for displaying a Share Sheet component\n * @public\n */\n\n\nvar Share =\n/** @class */\nfunction (_super) {\n  __extends(Share, _super);\n\n  function Share(app) {\n    return _super.call(this, app, types_1.Group.Share, types_1.Group.Share) || this;\n  }\n  /**\n   * @public\n   */\n\n\n  Share.prototype.dispatch = function (action, payload) {\n    switch (action) {\n      case Action.SHOW:\n        this.dispatchShareAction(ActionType.SHOW, payload);\n        break;\n\n      default:\n        throw \"Action: \" + action + \" not supported\";\n    }\n\n    return this;\n  };\n  /**\n   * @internal\n   */\n\n\n  Share.prototype.dispatchShareAction = function (actionType, payload) {\n    this.app.dispatch(helper_1.actionWrapper({\n      type: actionType,\n      group: types_1.Group.Share,\n      payload: __assign({\n        id: this.id\n      }, payload)\n    }));\n  };\n\n  return Share;\n}(helper_1.ActionSet);\n\nexports.Share = Share;\n/**\n * @public\n */\n\nfunction create(app) {\n  return new Share(app);\n}\n\nexports.create = create;","map":null,"metadata":{},"sourceType":"script"}