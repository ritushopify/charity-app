{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar helper_1 = require(\"../../helper\");\n\nvar types_1 = require(\"../../types\");\n\nvar types_2 = require(\"./types\");\n\nfunction push(payload) {\n  return helper_1.actionWrapper({\n    payload: payload,\n    group: types_1.Group.Navigation,\n    type: types_2.ActionType.PUSH\n  });\n}\n\nexports.push = push;\n\nfunction replace(payload) {\n  return helper_1.actionWrapper({\n    payload: payload,\n    group: types_1.Group.Navigation,\n    type: types_2.ActionType.REPLACE\n  });\n}\n\nexports.replace = replace;\n\nvar History =\n/** @class */\nfunction (_super) {\n  __extends(History, _super);\n\n  function History(app) {\n    return _super.call(this, app, 'History', types_1.Group.Navigation) || this;\n  }\n\n  Object.defineProperty(History.prototype, \"payload\", {\n    get: function () {\n      return {\n        id: this.id\n      };\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  History.prototype.dispatch = function (type, path) {\n    var payload = __assign({}, this.payload, {\n      path: path\n    });\n\n    switch (type) {\n      case types_2.Action.PUSH:\n        this.app.dispatch(push(payload));\n        break;\n\n      case types_2.Action.REPLACE:\n        this.app.dispatch(replace(payload));\n        break;\n    }\n\n    return this;\n  };\n\n  return History;\n}(helper_1.ActionSet);\n\nexports.History = History;\n\nfunction create(app) {\n  return new History(app);\n}\n\nexports.create = create;","map":null,"metadata":{},"sourceType":"script"}