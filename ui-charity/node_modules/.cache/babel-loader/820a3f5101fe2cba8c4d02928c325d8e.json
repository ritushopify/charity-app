{"ast":null,"code":"\"use strict\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : new P(function (resolve) {\n        resolve(result.value);\n      }).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function () {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n\n        case 7:\n          op = _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n\n            _.ops.push(op);\n\n            break;\n          }\n\n          if (t[2]) _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n      }\n\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar actions_1 = require(\"../actions/Modal/actions\");\n\nvar types_1 = require(\"../actions/Modal/types\");\n\nvar MessageTransport_1 = require(\"../MessageTransport\");\n/**\n * If weâ€™re in a modal context and size is `Auto`, set up modal auto sizing.\n * @param app App Bridge client application instance\n *\n * @internal\n */\n\n\nfunction setupModalAutoSizing(app) {\n  return __awaiter(this, void 0, void 0, function () {\n    return __generator(this, function (_a) {\n      return [2\n      /*return*/\n      , app.getState().then(function (appState) {\n        var context = appState.context;\n\n        if (context !== MessageTransport_1.Context.Modal) {\n          return;\n        }\n\n        var _a = appState.modal,\n            id = _a.id,\n            size = _a.size;\n\n        if (size === types_1.Size.Auto) {\n          createMutationObserver(app, id);\n        }\n      })];\n    });\n  });\n}\n\nexports.setupModalAutoSizing = setupModalAutoSizing;\n/**\n * Sets up modal auto sizing, using a MutationObserver.\n *\n * @param app App Bridge client application instance\n * @param id Currently active modal instance ID\n *\n * @internal\n */\n\nfunction createMutationObserver(app, id) {\n  var lastKnownWindowHeight = -1;\n  var mutationTimeoutId;\n  var mutationObserverConfig = {\n    attributes: true,\n    attributeOldValue: false,\n    characterData: true,\n    characterDataOldValue: false,\n    childList: true,\n    subtree: true\n  };\n  var mutationObserver = new MutationObserver(debouncedResizeHandler);\n  mutationObserver.observe(document.body, mutationObserverConfig);\n  updateHeight();\n\n  function debouncedResizeHandler() {\n    if (mutationTimeoutId) {\n      window.clearTimeout(mutationTimeoutId);\n    }\n\n    mutationTimeoutId = window.setTimeout(updateHeight, 16);\n  }\n\n  function updateHeight() {\n    var height = document.body.scrollHeight;\n\n    if (height !== lastKnownWindowHeight) {\n      lastKnownWindowHeight = height;\n      app.dispatch(actions_1.updateModalSize({\n        id: id,\n        height: String(height)\n      }));\n    }\n  }\n}\n\nexports.createMutationObserver = createMutationObserver;","map":null,"metadata":{},"sourceType":"script"}